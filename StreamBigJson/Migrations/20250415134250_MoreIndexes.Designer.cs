// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreamBigJson;

#nullable disable

namespace StreamBigJson.Migrations
{
    [DbContext(typeof(PackageIndexContext))]
    [Migration("20250415134250_MoreIndexes")]
    partial class MoreIndexes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("StreamBigJson.Package", b =>
                {
                    b.Property<Guid>("PackageUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "uuid4");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_created");

                    b.Property<string>("DonationUrl")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "donation_link");

                    b.Property<bool>("HasNsfwContent")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "has_nsfw_content");

                    b.Property<bool>("IsDeprecated")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_deprecated");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_pinned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "owner");

                    b.Property<string>("PackageUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "package_url");

                    b.Property<long>("RatingScore")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "rating_score");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_updated");

                    b.HasKey("PackageUuid");

                    b.HasIndex("Name");

                    b.HasIndex("Namespace");

                    b.HasIndex("Namespace", "Name")
                        .IsUnique();

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("StreamBigJson.PackageCategory", b =>
                {
                    b.Property<Guid>("PackageUuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryLabel")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("PackageUuid", "CategoryLabel");

                    b.HasIndex("CategoryLabel");

                    b.HasIndex("PackageUuid");

                    b.ToTable("PackageCategories");
                });

            modelBuilder.Entity("StreamBigJson.PackageDependency", b =>
                {
                    b.Property<Guid>("PackageVersionUuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("DependencyNamespace")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("DependencyName")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("DependencyVersionString")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("PackageVersionUuid", "DependencyNamespace", "DependencyName");

                    b.HasIndex("PackageVersionUuid");

                    b.ToTable("PackageDependencies");
                });

            modelBuilder.Entity("StreamBigJson.PackageVersion", b =>
                {
                    b.Property<Guid>("PackageVersionUuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "uuid4");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "date_created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<long>("DownloadCount")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "downloads");

                    b.Property<string>("DownloadUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "download_url");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "file_size");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "icon");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_active");

                    b.Property<Guid?>("PackageUuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("VersionNumberString")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "version_number");

                    b.Property<string>("WebsiteUrl")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "website_url");

                    b.HasKey("PackageVersionUuid");

                    b.HasIndex("PackageUuid");

                    b.ToTable("PackageVersions");

                    b.HasAnnotation("Relational:JsonPropertyName", "versions");
                });

            modelBuilder.Entity("StreamBigJson.PackageCategory", b =>
                {
                    b.HasOne("StreamBigJson.Package", null)
                        .WithMany("Categories")
                        .HasForeignKey("PackageUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StreamBigJson.PackageDependency", b =>
                {
                    b.HasOne("StreamBigJson.PackageVersion", null)
                        .WithMany("Dependencies")
                        .HasForeignKey("PackageVersionUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StreamBigJson.PackageVersion", b =>
                {
                    b.HasOne("StreamBigJson.Package", "Package")
                        .WithMany("Versions")
                        .HasForeignKey("PackageUuid");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("StreamBigJson.Package", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("StreamBigJson.PackageVersion", b =>
                {
                    b.Navigation("Dependencies");
                });
#pragma warning restore 612, 618
        }
    }
}
